package org.span.manager;

import java.io.IOException;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.util.Enumeration;

import org.span.R;

import android.app.Activity;
import android.content.Context;
import android.content.Intent;
import android.media.AudioManager;
import android.net.rtp.AudioCodec;
import android.net.rtp.AudioGroup;
import android.net.rtp.AudioStream;
import android.net.rtp.RtpStream;
import android.os.Bundle;
import android.os.StrictMode;
import android.util.Log;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.Button;

public class RTPGenerator extends Activity{
	
	private OnClickListener send = null;
	private OnClickListener stop = null;
	private Button sendRTP = null;
	private Button stopRTP = null;
	AudioStream audioStream;
	AudioGroup audioGroup;
	
	private static final String TAG = "RTPGenerator";
	@Override
	 protected void onCreate(Bundle savedInstanceState) {
	  super.onCreate(savedInstanceState);
	  //setContentView(R.layout.activity_main);
	  StrictMode.ThreadPolicy policy = new StrictMode.ThreadPolicy.Builder().permitAll().build();
	  StrictMode.setThreadPolicy(policy);
	  try {   
	      AudioManager audio =  (AudioManager) getSystemService(Context.AUDIO_SERVICE); 
	      audio.setMode(AudioManager.MODE_IN_COMMUNICATION);
	      audioGroup = new AudioGroup();
	      audioGroup.setMode(AudioGroup.MODE_NORMAL);        
	      audioStream = new AudioStream(InetAddress.getByAddress(getLocalIPAddress ()));
	      audioStream.setCodec(AudioCodec.PCMU);
	      audioStream.setMode(RtpStream.MODE_NORMAL);
	                           //set receiver(vlc player) machine ip address(please update with your machine ip)
	      audioStream.associate(InetAddress.getByAddress(new byte[] {(byte)10, (byte)0, (byte)0, (byte)10 }), 22222);
	   
	  } catch (Exception e) {
	   Log.e("----------------------", e.toString());
	   e.printStackTrace();
	  }
	  sendRTP = (Button)findViewById(R.id.startRTP);
	  stopRTP = (Button)findViewById(R.id.stopRTP);
	  
	  send = new OnClickListener() {
      	@Override
			public void onClick(View v) {
      			audioStream.join(audioGroup);
			}
		};
		
		sendRTP.setOnClickListener(this.send);
		
		stop = new OnClickListener() {
        	@Override
			public void onClick(View v) {
        		audioStream.release();
			}
		};
		
		stopRTP.setOnClickListener(this.stop);
	  
	}
	  public static byte[] getLocalIPAddress () {
		    byte ip[]=null;
		       try {
		           for (Enumeration en = NetworkInterface.getNetworkInterfaces(); en.hasMoreElements();) {
		               NetworkInterface intf = (NetworkInterface) en.nextElement();
		               for (Enumeration enumIpAddr = intf.getInetAddresses(); enumIpAddr.hasMoreElements();) {
		                   InetAddress inetAddress = (InetAddress) enumIpAddr.nextElement();
		                   if (!inetAddress.isLoopbackAddress()) {
		                    ip= inetAddress.getAddress();
		                   }
		               }
		           }
		       } catch (SocketException ex) {
		           Log.i("SocketException ", ex.toString());
		       }
		       return ip;
		 }
	  
	public static void open(Activity activity) {
		// TODO Auto-generated method stub
		Log.v(TAG, "open()");
		Intent it = new Intent("android.intent.action.RTP_ACTION");
		activity.startActivity(it);
		
	}

}
